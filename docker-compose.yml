version: '3.8'

services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch1
    environment:
      - cluster.name=es-cluster
      - node.name=es-node-1
      - network.host=0.0.0.0
      - discovery.seed_hosts=elasticsearch2,elasticsearch3
      - cluster.initial_master_nodes=es-node-1,es-node-2,es-node-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - log-net

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch2
    environment:
      - cluster.name=es-cluster
      - node.name=es-node-2
      - network.host=0.0.0.0
      - discovery.seed_hosts=elasticsearch1,elasticsearch3
      - cluster.initial_master_nodes=es-node-1,es-node-2,es-node-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - log-net

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch3
    environment:
      - cluster.name=es-cluster
      - node.name=es-node-3
      - network.host=0.0.0.0
      - discovery.seed_hosts=elasticsearch1,elasticsearch2
      - cluster.initial_master_nodes=es-node-1,es-node-2,es-node-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata3:/usr/share/elasticsearch/data
    networks:
      - log-net

  app1:
    build:
      context: ../backend/app
      dockerfile: Dockerfile
    container_name: app1
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch1:9200
    networks:
      - log-net
    depends_on:
      - elasticsearch1

  app2:
    build:
      context: ../backend/app
      dockerfile: Dockerfile
    container_name: app2
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch1:9200
    networks:
      - log-net
    depends_on:
      - elasticsearch1

  app3:
    build:
      context: ../backend/app
      dockerfile: Dockerfile
    container_name: app3
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch1:9200
    networks:
      - log-net
    depends_on:
      - elasticsearch1

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "3000:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - log-net

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4000:4000"
    networks:
      - log-net

networks:
  log-net:
    driver: bridge

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local